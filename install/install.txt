# Smart Notification System - Windows Server Installation Guide

## üñ•Ô∏è ‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö (System Requirements)

### ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£
- Windows Server 2019 / 2022
- Windows 10/11 Pro (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Development)

### Software Requirements
- PowerShell 5.1 ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤
- .NET Framework 4.8
- Microsoft Visual C++ Redistributable

### Hardware Requirements (Minimum)
- CPU: 2 cores
- RAM: 4 GB
- Storage: 50 GB free space
- Network: Internet connection

### Hardware Requirements (Recommended)
- CPU: 4+ cores
- RAM: 8+ GB
- Storage: 100+ GB SSD
- Network: 1 Gbps

## üöÄ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (Quick Installation)

### ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏£‡∏∞‡∏ö‡∏ö

1. **‡πÄ‡∏õ‡∏¥‡∏î PowerShell ‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î Administrator**
```powershell
# ‡∏Å‡∏î Win + X ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "Windows PowerShell (Admin)"
```

2. **‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Execution Policy**
```powershell
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine
```

3. **‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ô Installation Script**
```powershell
# ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î script
Invoke-WebRequest -Uri "https://raw.githubusercontent.com/your-org/smart-notification-system/main/install.ps1" -OutFile "install.ps1"

# ‡∏£‡∏±‡∏ô script
.\install.ps1
```

### ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° Installation Process

Installation script ‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:
- ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Chocolatey Package Manager
- ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ IIS
- ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PHP 8.2 ‡πÅ‡∏•‡∏∞ Extensions
- ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Composer
- ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PostgreSQL
- ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á RabbitMQ
- ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Redis (Memurai)
- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Laravel Application
- ‡∏™‡∏£‡πâ‡∏≤‡∏á Windows Services
- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ IIS Virtual Host

## üõ†Ô∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ö‡∏ö Manual

### 1. ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Chocolatey

```powershell
# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Chocolatey
Set-ExecutionPolicy Bypass -Scope Process -Force
[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

# Refresh environment variables
refreshenv
```

### 2. ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á IIS

```powershell
# ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô IIS ‡πÅ‡∏•‡∏∞ Features ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
Enable-WindowsOptionalFeature -Online -FeatureName IIS-WebServerRole -All
Enable-WindowsOptionalFeature -Online -FeatureName IIS-WebServer -All
Enable-WindowsOptionalFeature -Online -FeatureName IIS-CommonHttpFeatures -All
Enable-WindowsOptionalFeature -Online -FeatureName IIS-HttpErrors -All
Enable-WindowsOptionalFeature -Online -FeatureName IIS-HttpLogging -All
Enable-WindowsOptionalFeature -Online -FeatureName IIS-Security -All
Enable-WindowsOptionalFeature -Online -FeatureName IIS-RequestFiltering -All
Enable-WindowsOptionalFeature -Online -FeatureName IIS-StaticContent -All
Enable-WindowsOptionalFeature -Online -FeatureName IIS-DefaultDocument -All
Enable-WindowsOptionalFeature -Online -FeatureName IIS-DirectoryBrowsing -All
Enable-WindowsOptionalFeature -Online -FeatureName IIS-CGI -All

# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á URL Rewrite Module
$urlRewriteUrl = "https://download.microsoft.com/download/1/2/8/128E2E22-C1B9-44A4-BE2A-5859ED1D4592/rewrite_amd64_en-US.msi"
$urlRewritePath = "$env:TEMP\rewrite_amd64_en-US.msi"
Invoke-WebRequest -Uri $urlRewriteUrl -OutFile $urlRewritePath
Start-Process msiexec.exe -ArgumentList "/i", $urlRewritePath, "/quiet" -Wait
```

### 3. ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PHP

```powershell
# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå PHP
New-Item -ItemType Directory -Path "C:\PHP" -Force

# ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PHP 8.2
$phpUrl = "https://windows.php.net/downloads/releases/php-8.2.13-Win32-vs16-x64.zip"
$phpZip = "$env:TEMP\php.zip"
Invoke-WebRequest -Uri $phpUrl -OutFile $phpZip

# ‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå
Expand-Archive -Path $phpZip -DestinationPath "C:\PHP" -Force

# ‡πÄ‡∏û‡∏¥‡πà‡∏° PHP ‡πÉ‡∏ô PATH
$currentPath = [Environment]::GetEnvironmentVariable("Path", "Machine")
[Environment]::SetEnvironmentVariable("Path", "$currentPath;C:\PHP", "Machine")

# ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç php.ini
Copy-Item "C:\PHP\php.ini-development" "C:\PHP\php.ini"
```

**‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå php.ini:**
```ini
; ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Extensions
extension=openssl
extension=pdo_pgsql
extension=pgsql
extension=mbstring
extension=curl
extension=fileinfo
extension=zip
extension=gd
extension=ldap

; ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î Memory ‡πÅ‡∏•‡∏∞ File Upload
memory_limit = 512M
max_execution_time = 300
upload_max_filesize = 64M
post_max_size = 64M

; Security Settings
expose_php = Off
display_errors = Off
log_errors = On
error_log = C:\PHP\logs\php_errors.log

; Session Security
session.cookie_httponly = 1
session.use_strict_mode = 1
```

### 4. ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Composer

```powershell
# ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î Composer
$composerSetup = "$env:TEMP\composer-setup.php"
Invoke-WebRequest -Uri "https://getcomposer.org/installer" -OutFile $composerSetup

# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Composer
php $composerSetup --install-dir=C:\composer --filename=composer.phar

# ‡∏™‡∏£‡πâ‡∏≤‡∏á batch file
$composerBat = @"
@echo off
php "C:\composer\composer.phar" %*
"@
$composerBat | Set-Content "C:\composer\composer.bat"

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô PATH
$currentPath = [Environment]::GetEnvironmentVariable("Path", "Machine")
[Environment]::SetEnvironmentVariable("Path", "$currentPath;C:\composer", "Machine")
```

### 5. ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PostgreSQL

```powershell
# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏ú‡πà‡∏≤‡∏ô Chocolatey
choco install postgresql15 -y --params '/Password:YourSecurePassword123!'

# ‡∏£‡∏≠‡πÉ‡∏´‡πâ service ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
Start-Sleep -Seconds 10

# ‡∏™‡∏£‡πâ‡∏≤‡∏á database ‡πÅ‡∏•‡∏∞ user
$env:PGPASSWORD = "YourSecurePassword123!"
& "C:\Program Files\PostgreSQL\15\bin\psql.exe" -U postgres -c "CREATE USER smart_notification WITH PASSWORD 'DbPassword123!';"
& "C:\Program Files\PostgreSQL\15\bin\psql.exe" -U postgres -c "CREATE DATABASE smart_notification OWNER smart_notification;"
& "C:\Program Files\PostgreSQL\15\bin\psql.exe" -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE smart_notification TO smart_notification;"
```

### 6. ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á RabbitMQ

```powershell
# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Erlang (‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö RabbitMQ)
choco install erlang -y

# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á RabbitMQ
choco install rabbitmq -y

# ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Management Plugin
& "C:\Program Files\RabbitMQ Server\rabbitmq_server-3.12.8\sbin\rabbitmq-plugins.bat" enable rabbitmq_management

# ‡∏™‡∏£‡πâ‡∏≤‡∏á user
& "C:\Program Files\RabbitMQ Server\rabbitmq_server-3.12.8\sbin\rabbitmqctl.bat" add_user smart_notification "RabbitPassword123!"
& "C:\Program Files\RabbitMQ Server\rabbitmq_server-3.12.8\sbin\rabbitmqctl.bat" set_user_tags smart_notification administrator
& "C:\Program Files\RabbitMQ Server\rabbitmq_server-3.12.8\sbin\rabbitmqctl.bat" set_permissions -p / smart_notification ".*" ".*" ".*"
```

### 7. ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Redis

```powershell
# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Memurai (Redis ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Windows)
choco install memurai-developer -y
```

## üìÅ ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Laravel Application

### 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á Laravel Project

```powershell
# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö application
New-Item -ItemType Directory -Path "C:\inetpub\wwwroot\smart-notification-system" -Force
Set-Location "C:\inetpub\wwwroot\smart-notification-system"

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Laravel project
composer create-project laravel/laravel . --prefer-dist

# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á packages ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
composer require adldap2/adldap2-laravel
composer require vladimir-yuldashev/laravel-queue-rabbitmq
composer require microsoft/microsoft-graph
composer require tymon/jwt-auth
composer require spatie/laravel-permission
composer require spatie/laravel-activitylog
composer require maatwebsite/excel
composer require barryvdh/laravel-dompdf
composer require predis/predis
```

### 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå .env

```powershell
# ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå environment
Copy-Item ".env.example" ".env"
```

**‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå .env:**
```env
APP_NAME="Smart Notification System"
APP_ENV=production
APP_KEY=
APP_DEBUG=false
APP_URL=http://localhost

DB_CONNECTION=pgsql
DB_HOST=127.0.0.1
DB_PORT=5432
DB_DATABASE=smart_notification
DB_USERNAME=smart_notification
DB_PASSWORD=DbPassword123!

RABBITMQ_HOST=127.0.0.1
RABBITMQ_PORT=5672
RABBITMQ_USER=smart_notification
RABBITMQ_PASSWORD=RabbitPassword123!
RABBITMQ_VHOST=/
QUEUE_CONNECTION=rabbitmq

REDIS_HOST=127.0.0.1
REDIS_PASSWORD=
REDIS_PORT=6379

# Email Configuration (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á)
MAIL_MAILER=smtp
MAIL_HOST=smtp.office365.com
MAIL_PORT=587
MAIL_USERNAME=your-email@company.com
MAIL_PASSWORD=your-email-password
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS="noreply@company.com"
MAIL_FROM_NAME="${APP_NAME}"

# LDAP Configuration (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á)
LDAP_HOST=ldap.company.com
LDAP_USERNAME="CN=Service Account,OU=Users,DC=company,DC=com"
LDAP_PASSWORD=ldap-service-password
LDAP_BASE_DN="DC=company,DC=com"
LDAP_PORT=389
LDAP_SSL=false
LDAP_TLS=true

# Microsoft Teams Configuration
TEAMS_CLIENT_ID=your-teams-client-id
TEAMS_CLIENT_SECRET=your-teams-client-secret
TEAMS_TENANT_ID=your-tenant-id
```

### 3. Initialize Laravel Application

```powershell
# ‡∏™‡∏£‡πâ‡∏≤‡∏á application key
php artisan key:generate

# ‡∏™‡∏£‡πâ‡∏≤‡∏á JWT secret
php artisan jwt:secret

# Publish vendor configurations
php artisan vendor:publish --provider="Adldap\Laravel\AdldapServiceProvider"
php artisan vendor:publish --provider="Tymon\JWTAuth\Providers\LaravelServiceProvider"
php artisan vendor:publish --provider="Spatie\Permission\PermissionServiceProvider"
php artisan vendor:publish --provider="Spatie\Activitylog\ActivitylogServiceProvider"

# ‡∏£‡∏±‡∏ô migrations ‡πÅ‡∏•‡∏∞ seeders
php artisan migrate
php artisan db:seed

# ‡∏™‡∏£‡πâ‡∏≤‡∏á storage link
php artisan storage:link

# Cache configurations
php artisan config:cache
php artisan route:cache
php artisan view:cache
```

## üåê ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ IIS

### 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á Application Pool

```powershell
Import-Module WebAdministration

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Application Pool ‡πÉ‡∏´‡∏°‡πà
New-WebAppPool -Name "SmartNotificationPool"
Set-ItemProperty -Path "IIS:\AppPools\SmartNotificationPool" -Name processModel.identityType -Value ApplicationPoolIdentity
Set-ItemProperty -Path "IIS:\AppPools\SmartNotificationPool" -Name recycling.periodicRestart.time -Value "00:00:00"
```

### 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Website

```powershell
# ‡∏•‡∏ö Default Website (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
Remove-Website -Name "Default Web Site" -ErrorAction SilentlyContinue

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Website ‡πÉ‡∏´‡∏°‡πà
$siteName = "SmartNotificationSystem"
$publicPath = "C:\inetpub\wwwroot\smart-notification-system\public"
New-Website -Name $siteName -Port 80 -PhysicalPath $publicPath -ApplicationPool "SmartNotificationPool"
```

### 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå web.config

‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå `web.config` ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå `public`:

```xml
<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <system.webServer>
        <rewrite>
            <rules>
                <rule name="Laravel" stopProcessing="true">
                    <match url="^" ignoreCase="false" />
                    <conditions logicalGrouping="MatchAll">
                        <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                        <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                    </conditions>
                    <action type="Rewrite" url="index.php" appendQueryString="true" />
                </rule>
            </rules>
        </rewrite>
        <handlers>
            <add name="PHP-FastCGI" path="*.php" verb="*" modules="FastCgiModule" scriptProcessor="C:\PHP\php-cgi.exe" resourceType="Either" />
        </handlers>
        <fastCgi>
            <application fullPath="C:\PHP\php-cgi.exe" maxInstances="4" idleTimeout="300" activityTimeout="300" requestTimeout="300" instanceMaxRequests="1000" />
        </fastCgi>
        <defaultDocument>
            <files>
                <clear />
                <add value="index.php" />
                <add value="index.html" />
            </files>
        </defaultDocument>
        <httpErrors errorMode="Detailed" />
        <security>
            <requestFiltering>
                <fileExtensions>
                    <add fileExtension=".env" allowed="false" />
                </fileExtensions>
                <hiddenSegments>
                    <add segment="storage" />
                    <add segment="bootstrap" />
                </hiddenSegments>
            </requestFiltering>
        </security>
    </system.webServer>
</configuration>
```

### 4. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Permissions

```powershell
# ‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå IIS_IUSRS ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á application folder
$appPath = "C:\inetpub\wwwroot\smart-notification-system"
icacls $appPath /grant "IIS_IUSRS:(OI)(CI)RX"
icacls "$appPath\storage" /grant "IIS_IUSRS:(OI)(CI)F"
icacls "$appPath\bootstrap\cache" /grant "IIS_IUSRS:(OI)(CI)F"
```

## üîß ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Windows Services

### 1. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á NSSM (Non-Sucking Service Manager)

```powershell
choco install nssm -y
```

### 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Queue Worker Service

```powershell
# ‡∏™‡∏£‡πâ‡∏≤‡∏á service ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Queue Worker
$appPath = "C:\inetpub\wwwroot\smart-notification-system"
nssm install "SmartNotificationWorker" "php" "artisan queue:work rabbitmq --tries=3 --timeout=90 --sleep=3"
nssm set "SmartNotificationWorker" AppDirectory $appPath
nssm set "SmartNotificationWorker" DisplayName "Smart Notification Queue Worker"
nssm set "SmartNotificationWorker" Description "Processes background jobs for Smart Notification System"
nssm set "SmartNotificationWorker" Start SERVICE_AUTO_START

# ‡πÄ‡∏£‡∏¥‡πà‡∏° service
Start-Service "SmartNotificationWorker"
```

### 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Scheduler Service

```powershell
# ‡∏™‡∏£‡πâ‡∏≤‡∏á batch script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö scheduler
$schedulerScript = "$appPath\scheduler.bat"
$schedulerContent = @"
@echo off
cd /d "$appPath"
:loop
php artisan schedule:run
timeout /t 60 /nobreak > nul
goto loop
"@
$schedulerContent | Set-Content $schedulerScript

# ‡∏™‡∏£‡πâ‡∏≤‡∏á service
nssm install "SmartNotificationScheduler" $schedulerScript
nssm set "SmartNotificationScheduler" AppDirectory $appPath
nssm set "SmartNotificationScheduler" DisplayName "Smart Notification Scheduler"
nssm set "SmartNotificationScheduler" Description "Runs scheduled tasks for Smart Notification System"
nssm set "SmartNotificationScheduler" Start SERVICE_AUTO_START

# ‡πÄ‡∏£‡∏¥‡πà‡∏° service
Start-Service "SmartNotificationScheduler"
```

## üîí ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢

### 1. ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Windows Firewall

```powershell
# ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï HTTP traffic
New-NetFirewallRule -DisplayName "Smart Notification HTTP" -Direction Inbound -Protocol TCP -LocalPort 80 -Action Allow

# ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï HTTPS traffic (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö production)
New-NetFirewallRule -DisplayName "Smart Notification HTTPS" -Direction Inbound -Protocol TCP -LocalPort 443 -Action Allow

# ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï RabbitMQ Management (optional)
New-NetFirewallRule -DisplayName "RabbitMQ Management" -Direction Inbound -Protocol TCP -LocalPort 15672 -Action Allow
```

### 2. ‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç

```powershell
# ‡∏ã‡πà‡∏≠‡∏ô‡πÑ‡∏ü‡∏•‡πå .env
attrib +H "C:\inetpub\wwwroot\smart-notification-system\.env"

# ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ú‡πà‡∏≤‡∏ô web.config (‡∏ó‡∏≥‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô)
```

## üìä ‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

### 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á Backup Script

‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå `C:\Scripts\smart-notification-backup.bat`:

```batch
@echo off
set BACKUP_DIR=C:\Backups\SmartNotification
set DATE=%date:~-4,4%%date:~-10,2%%date:~-7,2%_%time:~0,2%%time:~3,2%%time:~6,2%
set DATE=%DATE: =0%

if not exist "%BACKUP_DIR%" mkdir "%BACKUP_DIR%"

REM Database backup
set PGPASSWORD=DbPassword123!
"C:\Program Files\PostgreSQL\15\bin\pg_dump.exe" -h localhost -U smart_notification smart_notification > "%BACKUP_DIR%\database_%DATE%.sql"

REM Files backup (‡πÉ‡∏ä‡πâ 7-Zip)
"C:\Program Files\7-Zip\7z.exe" a "%BACKUP_DIR%\files_%DATE%.7z" "C:\inetpub\wwwroot\smart-notification-system" -xr!storage\logs\*

REM Clean old backups (‡πÄ‡∏Å‡πá‡∏ö 7 ‡∏ß‡∏±‡∏ô)
forfiles /p "%BACKUP_DIR%" /s /c "cmd /c Del @path" /d -7

echo Backup completed: %DATE%
```

### 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Scheduled Task

```powershell
# ‡∏™‡∏£‡πâ‡∏≤‡∏á scheduled task ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö backup ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 02:00
$action = New-ScheduledTaskAction -Execute "C:\Scripts\smart-notification-backup.bat"
$trigger = New-ScheduledTaskTrigger -Daily -At 2:00AM
$principal = New-ScheduledTaskPrincipal -UserId "SYSTEM" -LogonType ServiceAccount -RunLevel Highest

Register-ScheduledTask -TaskName "SmartNotificationBackup" -Action $action -Trigger $trigger -Principal $principal -Description "Daily backup of Smart Notification System"
```

## ‚ö° ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û

### 1. ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ PHP OPcache

‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå `php.ini`:

```ini
; OPcache settings
zend_extension=opcache
opcache.enable=1
opcache.enable_cli=1
opcache.memory_consumption=256
opcache.interned_strings_buffer=16
opcache.max_accelerated_files=4000
opcache.revalidate_freq=60
opcache.fast_shutdown=1
opcache.validate_timestamps=0
```

### 2. ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ IIS Compression

```powershell
# ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô static ‡πÅ‡∏•‡∏∞ dynamic compression
Enable-WindowsOptionalFeature -Online -FeatureName IIS-HttpCompressionStatic
Enable-WindowsOptionalFeature -Online -FeatureName IIS-HttpCompressionDynamic

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ compression ‡πÉ‡∏ô web.config
```

### 3. ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ PostgreSQL

‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå `postgresql.conf`:

```ini
# Memory settings
shared_buffers = 256MB
effective_cache_size = 1GB
work_mem = 4MB
maintenance_work_mem = 64MB

# Checkpoint settings
checkpoint_completion_target = 0.9
wal_buffers = 16MB

# Connection settings
max_connections = 100
```

## üîç ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤

### 1. ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Services

```powershell
# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ services
Get-Service -Name "SmartNotificationWorker"
Get-Service -Name "SmartNotificationScheduler"
Get-Service -Name "postgresql*"
Get-Service -Name "RabbitMQ"

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö logs
Get-EventLog -LogName Application -Source "SmartNotificationWorker" -Newest 10
```

### 2. ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Application

```powershell
# ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå application
Set-Location "C:\inetpub\wwwroot\smart-notification-system"

# ‡∏ó‡∏î‡∏™‡∏≠‡∏ö database connection
php artisan tinker
# ‡πÉ‡∏ô tinker: DB::connection()->getPdo();

# ‡∏ó‡∏î‡∏™‡∏≠‡∏ö queue connection
php artisan queue:work --once

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö failed jobs
php artisan queue:failed
```

### 3. ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Logs

```powershell
# Laravel logs
Get-Content "C:\inetpub\wwwroot\smart-notification-system\storage\logs\laravel.log" -Tail 50

# PHP errors
Get-Content "C:\PHP\logs\php_errors.log" -Tail 20

# IIS logs
Get-Content "C:\inetpub\logs\LogFiles\W3SVC1\*.log" -Tail 20
```

## üìû ‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠

### ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
- **Application**: `C:\inetpub\wwwroot\smart-notification-system`
- **Configuration**: `C:\inetpub\wwwroot\smart-notification-system\.env`
- **Logs**: `C:\inetpub\wwwroot\smart-notification-system\storage\logs\`
- **PHP Configuration**: `C:\PHP\php.ini`
- **Backup Script**: `C:\Scripts\smart-notification-backup.bat`
- **Credentials**: `C:\Scripts\smart-notification-credentials.txt`

### ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå
```powershell
# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö
Get-Service -Name "*Smart*", "*PostgreSQL*", "*RabbitMQ*"

# Restart services
Restart-Service "SmartNotificationWorker"
Restart-Service "SmartNotificationScheduler"

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö IIS
Get-Website
Get-WebAppPoolState "SmartNotificationPool"

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö PHP
php -v
php -m | findstr pgsql
```

---

## üéâ ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à

‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ:

1. **‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Web Interface**: `http://localhost`
2. **‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô RabbitMQ Management**: `http://localhost:15672`
3. **‡∏ó‡∏î‡∏™‡∏≠‡∏ö API**: ‡πÉ‡∏ä‡πâ Postman ‡∏´‡∏£‡∏∑‡∏≠ curl ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API endpoints
4. **‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ LDAP, Email, ‡πÅ‡∏•‡∏∞ Teams**: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå `.env`
5. **‡∏™‡∏£‡πâ‡∏≤‡∏á API Keys**: ‡∏ú‡πà‡∏≤‡∏ô Web Interface ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å

‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö! üöÄ