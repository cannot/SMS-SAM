version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smart-notification-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - smart-notification
    depends_on:
      - postgres
      - rabbitmq
      - redis

  nginx:
    image: nginx:alpine
    container_name: smart-notification-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - smart-notification
    depends_on:
      - app

  postgres:
    image: postgres:15
    container_name: smart-notification-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: smart_notification
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - smart-notification

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: smart-notification-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    networks:
      - smart-notification

  redis:
    image: redis:7-alpine
    container_name: smart-notification-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - smart-notification

  queue-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smart-notification-queue
    restart: unless-stopped
    command: php artisan queue:work rabbitmq --tries=3 --timeout=90 --sleep=3
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - smart-notification
    depends_on:
      - app
      - rabbitmq
      - postgres

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smart-notification-scheduler
    restart: unless-stopped
    command: bash -c "while true; do php artisan schedule:run; sleep 60; done"
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - smart-notification
    depends_on:
      - app
      - postgres

networks:
  smart-notification:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:

---

# Dockerfile
FROM php:8.2-fpm

# Set working directory
WORKDIR /var/www

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    libpq-dev \
    libldap2-dev \
    zip \
    unzip \
    supervisor

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \
    && docker-php-ext-install \
    pdo \
    pdo_pgsql \
    mbstring \
    exif \
    pcntl \
    bcmath \
    gd \
    zip \
    ldap

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copy existing application directory contents
COPY . /var/www

# Copy existing application directory permissions
COPY --chown=www-data:www-data . /var/www

# Install PHP dependencies
RUN composer install --no-dev --optimize-autoloader

# Change current user to www
USER www-data

# Expose port 9000 and start php-fpm server
EXPOSE 9000
CMD ["php-fpm"]

---

# docker/nginx/conf.d/app.conf
server {
    listen 80;
    server_name localhost;
    root /var/www/public;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";

    index index.php;

    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ \.php$ {
        fastcgi_pass app:9000;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}

---

# docker/php/local.ini
upload_max_filesize=40M
post_max_size=40M
memory_limit=512M
max_execution_time=300
max_input_vars=3000

---